// vendor
import React, {  Component  } from 'react';
import {  connect  } from 'react-redux';
// import classnames from 'classnames';
import {  Link  } from 'react-router-dom';
import {  CopyToClipboard  } from 'react-copy-to-clipboard';

// proj
// import {  GameElements  } from '../../components';
import {  getGameConnectionString, getJavaClient  } from '../../utils';
import {  book  } from '../../routes';
import Rules from '../../styles/images/icons/rules.svg';

// own
import Styles from './styles.module.css';

const BOARD_EXAMPLE = `
board=☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼ # # # #♥# # # &
#☼☼♥☼♥☼♥☼#☼ ☼ ☼ ☼ ☼♥☼ ☼ ☼#☼#☼♥☼#☼#☼☼#♥♥ ♥# # #♥ # ♥# ☼☼ ☼ ☼#☼ ☼♥☼ ☼
☼#☼ ☼ ☼ ☼ ☼&☼ ☼ ☼ ☼☼ ♥ # # ☼☼ ☼ ☼ ☼ ☼♥☼ ☼ ☼♥☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼☼#
# # ☺& 2 # # #☼☼#☼♥☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼ ☼ ☼☼#  # ♥# # ♥ # ☼☼
☼ ☼#☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼☼ #♥ # # ☼☼ ☼ ☼ ☼ ☼♥☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼
☼ ☼#☼☼ ## # # # # ♥ ☼☼ ☼ ☼♥☼ ☼ ☼#☼ ☼#☼ ☼ ☼♥☼ ☼ ☼ ☼ ☼ ☼☼ #♥ #
## # ###☼☼ ☼ ☼ ☼#☼ ☼ ☼#☼ ☼ ☼#☼#☼&☼ ☼ ☼ ☼ ☼☼ # # ♣# # ♥ ☼☼ ☼ ☼
☼♥☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼☼ ## ## ♥ # #☼☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼
☼☼ &### ##☼☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼☼ ♥ ##
☼☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼♥☼#☼ ☼ ☼ ☼☼ ## &# # ☼☼ ☼ ☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼
☼ ☼ ☼ ☼☼ # # # # & ☼☼♥☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼#☼ ☼☼ # ##
& ☼☼ ☼ ☼ ☼ ☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼#☼ ☼☼ # # & # #
☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼
`;
const BOARD_EXAMPLE_2 = `
☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼
☼ #   # #  #♥#  #  #  &        #☼
☼♥☼♥☼♥☼#☼ ☼ ☼ ☼ ☼♥☼ ☼ ☼#☼#☼♥☼#☼#☼
☼#♥♥  ♥#   # #♥   # ♥#      	☼
☼ ☼ ☼#☼ ☼♥☼ ☼ ☼#☼ ☼ ☼ ☼ ☼&☼ ☼ ☼ ☼
☼ 	♥      	# #        	☼
☼ ☼ ☼ ☼ ☼♥☼ ☼ ☼♥☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼
☼#   	# #   	☺& 2  #  #  #☼
☼#☼♥☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼ ☼ ☼
☼#  # ♥#      	     # ♥   #  ☼
☼ ☼ ☼#☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼
☼   #♥ #  	#             	☼
☼ ☼ ☼ ☼ ☼♥☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼
☼ 	## # 	#   # #   ♥  	☼
☼ ☼ ☼♥☼ ☼ ☼#☼ ☼#☼ ☼ ☼♥☼ ☼ ☼ ☼ ☼ ☼
☼   	#♥   	#      ## # ###☼
☼ ☼ ☼ ☼#☼ ☼ ☼#☼ ☼ ☼#☼#☼&☼ ☼ ☼ ☼ ☼
☼       #   	#    ♣# # 	♥ ☼
☼ ☼ ☼ ☼♥☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼
☼    	## ## ♥         	# #☼
☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼
☼                   &	###  ##☼
☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼
☼               	♥ ##    	☼
☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼♥☼#☼ ☼ ☼ ☼
☼ 	##     	&#     	#   ☼
☼ ☼ ☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼ ☼ ☼ ☼
☼   #   #         # 	# & 	☼
☼♥☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼ ☼#☼#☼ ☼
☼  #                	##   &  ☼
☼ ☼ ☼ ☼ ☼ ☼#☼ ☼ ☼ ☼ ☼ ☼ ☼#☼ ☼#☼ ☼
☼ #	# &    	#       # 	☼
☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼☼
`;

const {  boardExample, mask, highligte, highligteNotes  } = Styles;

class RulesContainer extends Component {
    render() {
        const {  server, code, id  } = this.props;
        const loggedIn = [ server, code, id ].every(Boolean);
        const connectionUrl = loggedIn
            ? getGameConnectionString(server, code, id)
            : void 0;

        const clientLink = loggedIn ? (
            <a href={ getJavaClient(server) }>Clients</a>
        ) :
            'Clients'

        return (
            <div className='container'>
                <div className={ mask }>Bot Challenge - як грати?</div>
                <div className='content'>
                    <h2 className='title'>У чому суть гри?</h2>
                    <p>
                        Потрібно написати свого Бота для героя, який обіграє інших
                        Ботів за сумою балів. Всі грають на одному полі. Герой може
                        пересуватися по відкритим клітинкам в усі чотири
                        сторони.
                    </p>
                    <p>
                        Герой може також поставити бомбу. Бомба вибухне через 5
                        тиків (секунд). Вибуховою хвилею бомби можна зачепити
                        мешканців поля. Всі, хто був зачеплений - зникає.
                        Підірватися можна і на своїй, і на чужій бомбі.
                    </p>
                    <p>
                        На своєму шляху герой може зустріти мітчопера - червону
                        повітряну кульку, що знищує на своєму шляху всіх
                        Бомберменів.
                    </p>
                    <p>
                        Кожен зруйнований об'єкт на полі (Бомбермен, мітчопер
                        та стіни які руйнуються) в цей же час відновлюється в
                        іншому місці. Якщо постраждав Бомбермен, йому
                        зараховуються штрафні бали -50 *.
                    </p>
                    <p>
                        Бомбермен, від бомби якого сталися руйнування на мапі
                        отримає бонусні бали: за зруйновану стінку + 10 *, за
                        мітчопера + 100 *, за іншого Бомбермена + 1000 *
                    </p>
                    <p>*точну суму балів треба уточнити в чаті у Slack</p>
                    <p>
                        Бали сумуються. Перемагає гравець з найбільшою кількістю
                        балів (до обумовленого часу).
                    </p>
                    <h2 className='title'>Як почати?</h2>
                    <div className='subTitle'>
                        Завантажте Клієнт гри для створення Бота: { clientLink }
                        { !loggedIn &&
                            '(посилання стануть доступні після входу на сайт)' }
                    </div>
                    <p>
                        Пам'ятайте: у процесі написання Бота вам необхідно
                        піклуватись тільки про логіку переміщень вашого Бота.
                        Всі необхідні допоміжні речі вже зроблені за вас.
                    </p>
                    <p>
                        Зареєструйтеся за допомогою форми реєстрації Нового
                        Гравця. Запам'ятайте вказані дані (адресу електронної пошти
                        і пароль) - вони знадобляться вам у майбутньому для
                        авторизації на сайті.
                    </p>
                    <p>
                        Далі необхідно приєднатися з коду до сервера.
                    </p>
                    <div className='subTitle'>
                        Адреса для підключення до гри на сервері:
                    </div>
                    <div className={ highligte }>
                        { loggedIn ? (
                            <>
                                { connectionUrl }
                                <CopyToClipboard text={ connectionUrl }>
                                    <img
                                        className={ Styles.copyConnection }
                                        src={ Rules }
                                        alt='Скопіювати адрес'
                                    />
                                </CopyToClipboard>
                            </>
                        ) : (
                            <Link to={ book.login }>
                                Потрібно увійти в систему для отримання посилання
                            </Link>
                        ) }
                    </div>
                    <div className={ highligteNotes }>
                        Тут 'user' - id гравця, a 'code' - твій security token,
                        його ти можеш отримати з адресного рядка браузера після
                        реєстрації/логіна.
                    </div>
                    <p>
                        Після підключення клієнт буде регулярно (кожну секунду)
                        отримувати рядок символів із закодованим станом поля.
                        Формат такий.
                        <br />
                    </p>
                    <p>{ '<Pre> ^ board = (. *) $' }</p>
                    <p>
                        {
                            '<P> за допомогою цього regexp можна викусити рядок дошки.'
                        }
                    </p>
                    <div className='subTitle'>
                        Ось приклад рядка від сервера:
                    </div>
                    <div className={ highligte }>
                        <pre className={ boardExample }>{ BOARD_EXAMPLE }</pre>
                    </div>
                    <p>
                        { ' ' }
                        Довжина рядка дорівнює площі поля. Якщо вставити символ
                        розриву рядків кожні sqrt (length (string)) символів, то
                        вийде читабельним зображення поля.
                    </p>
                    <div className={ highligte }>
                        <pre className={ boardExample }>{ BOARD_EXAMPLE_2 }</pre>
                    </div>
                    <p>
                        Перший символ рядка відповідає осередку розташованої в
                        лівому верхньому кутку і має координату [0,32]. У цьому
                        прикладі – позиція бомбермена (символ'☺') - [19, 25].
                        Лівий нижній кут має координату [0, 0].
                    </p>
                    <p>Розшифрування символів на малюнку нижче.</p>
                    <br />
                    <p>Твій бомпермен:</p>
                    <p>BOMBERMAN('☺'), // так виглядає мій Бомбер</p>
                    <p>
                        BOMB_BOMBERMAN('☻'), // так виглядає мій Бомбер, якщо
                        він сидить на бомбі
                    </p>
                    <p>
                        DEAD_BOMBERMAN('Ѡ'), // ой! твій Бомбер помер. Не
                        хвилюйся, він з'явиться через секунду десь на полі, але
                        цілком ймовірно за це ти отримаєш штрафні бали.
                    </p>
                    <br />
                    <p>Бомпермени суперників:</p>
                    <p>
                        OTHER_BOMBERMAN ('♥'), // а так виглядає Бомбер
                        суперника
                    </p>
                    <p>
                        OTHER_BOMB_BOMBERMAN ('♠'), // так, якщо Бомбер
                        суперника сидить на бомбі
                    </p>
                    <p>
                        OTHER_DEAD_BOMBERMAN ('♣'), // так, якщо Бомбер
                        суперника підірвався. Якщо це ти його підірвав - ти
                        отримаєш бонусні бали.
                    </p>
                    <br />
                    <p>Бомби:</p>
                    <p>
                        BOMB_TIMER_5 ('5'), // після того як Бомбер поставить
                        бомбу таймер почне працювати (всього 5 тиків)
                    </p>
                    <p>BOMB_TIMER_4 ('4'), // ця бомба вибухне через 4 тика</p>
                    <p>BOMB_TIMER_3 ('3'), // ця - через 3</p>
                    <p>BOMB_TIMER_2 ('2'), // два</p>
                    <p>BOMB_TIMER_1 ('1'), // один</p>
                    <p>
                        BOOM ('҉'), // Бам! Це те, як бомба вибухає. При цьому
                        все, що може бути зруйновано – зруйнується
                    </p>
                    <br />
                    <p>Стіни:</p>
                    <p>
                        WALL ('☼'), // неруйнівні стіни - їм вибухи бомб не
                        страшні
                    </p>
                    <p>
                        DESTROYABLE_WALL ('#'), // а ця стінка може бути
                        зруйнована
                    </p>
                    <p>
                        DESTROYED_WALL ('H'), // це як зруйнована стіна
                        виглядає, вона пропаде в наступну секунду. Якщо це ти
                        зробив - ти отримаєш бонусні бали
                    </p>
                    <br />
                    <p>Мітчопери:</p>
                    <p>
                        MEAT_CHOPPER ('&'), // цей малий бігає по полю в
                        довільному порядку, якщо він доторкнеться до Бомбера - той
                        помре, краще б тобі знищити цей шматок .... м'яса, за це
                        ти отримаєш бонусні бали
                    </p>
                    <p>
                        DEAD_MEAT_CHOPPER ('x'), // це мітчопер, який вибухнув
                    </p>
                    <br />
                    <p>Перки:</p>
                    <p>
                        Перки випадають на місці знищенної стіни з певною верогідністю
                        (20% за замовчуванням).
                        <br/>
                        Сила ефекту, таймаути, верогідність випадання перків можуть
                        бути знищені адміністратором гри.
                        <br/>
                        Тут вказані значення за замовчуванням. Дія перку зникає по
                        таймауту (10 тіків), якщо не вказано інакше в описі перку.
                        <br/>
                        Якщо перк ніхто не підібрав, він зникає з поля після 5 тіків.
                    </p>
                    <p>
                        BOMB_BLAST_RADIUS_INCREASE('+'), // Збільшує радіус вибуху
                        бомби (+2 до поточного) Діє лише для нових бомб.
                    </p>
                    <p>
                        BOMB_COUNT_INCREASE('c'), // збільшує кількість доступних
                        гравцю бомбер (+3 до поточного рівня).
                    </p>
                    <p>
                        BOMB_IMMUNE('i'), // Дає імунітет до вибухів бомб (навіть чужіх).
                    </p>
                    <p>
                        BOMB_REMOTE_CONTROL('r'), // Дистанційне керування детонатором.
                        Бомба вибухає при повторній дії. 3 детонатора.
                    </p>
                    <p>
                        void NONE (''); // вільна секція, куди ти можеш
                        направити Бомбера
                    </p>
                    { /* <div className='subTitle'>UI зі спрайтів:</div>
                    <GameElements /> */ }
                    <p>
                        Гра покрокова, кожну секунду сервер посилає твоєму
                        клієнту (Боту) стан оновленого поля на поточний момент і
                        чекає на відповідь команди героя. За наступну секунду
                        гравець повинен встигнути дати команду герою. Якщо не
                        встиг - герой стоїть на місці.
                    </p>
                    <p>
                        Команд декілька: UP, DOWN, LEFT, RIGHT - призводять до
                        руху героя в заданому напрямку на 1 клітинку; ACT -
                        залишити бомбу на місці героя. Команди руху можна
                        комбінувати з командою ACT, розділяючи їх через кому.
                        Порядок (LEFT, ACT) або (ACT, LEFT) - має значення, або
                        рухаємося вліво і там ставимо бомбу, або ставимо бомбу, а
                        потім біжимо вліво. Якщо гравець буде використовувати
                        тільки одну команду ACT, то бомба буде встановлена під
                        героєм без його переміщення на полі.
                    </p>
                    <p>
                        Завдання - написати вебсокет клієнта, який підключиться
                        до сервера. Потім змусити героя слухатися команди. Головна
                        мета - вести осмислену гру і перемогти, набравши
                        найбільшу кількість балів.
                    </p>
                </div>
            </div>
        );
    }
}

const mapStateToProps = state => ({
    id:     state.auth.id,
    server: state.auth.server,
    code:   state.auth.code,
});

export default connect(
    mapStateToProps,
    null,
)(RulesContainer);
